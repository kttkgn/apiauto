version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: api_auto_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: RootQwe123
      MYSQL_DATABASE: api_auto
      MYSQL_USER: api_user
      MYSQL_PASSWORD: ApiUser123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - api_auto_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: api_auto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
    networks:
      - api_auto_network

  # FastAPI 应用
  api:
    build: .
    container_name: api_auto_app
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      # 数据库配置
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: api_user
      MYSQL_PASSWORD: ApiUser123
      MYSQL_DB: api_auto
      # Redis 配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: null
      # 应用配置
      PYTHONPATH: /app
    volumes:
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - api_auto_network

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: api_auto_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
    networks:
      - api_auto_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  api_auto_network:
    driver: bridge 